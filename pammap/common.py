#!/usr/bin/env python3
## vi: tabstop=4 shiftwidth=4 softtabstop=4 expandtab
## ---------------------------------------------------------------------
##
## Copyright (C) 2018 by Michael F. Herbst and contributors
##
## This file is part of pammap.
##
## pammap is free software: you can redistribute it and/or modify
## it under the terms of the GNU Lesser General Public License as published
## by the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## pammap is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public License
## along with pammap. If not, see <http://www.gnu.org/licenses/>.
##
## ---------------------------------------------------------------------

import os
from datetime import date
import constants
import subprocess


def clean_block(blocktext):
    """
    Strip exactly for whitespaces and leading and trailling newlines

    Returns:
        list of lines
    """
    ret = []
    for line in blocktext.split("\n"):
        if line[:4] == "    ":
            ret.append(line[4:].rstrip())
        else:
            ret.append(line.rstrip())
    if ret[0] == "":
        ret = ret[1:]
    if ret[-1] == "":
        ret = ret[:-1]
    return ret


def licence_header_cpp(script):
    ret = """
    //
    // Copyright (C) {0:} by Michael F. Herbst and contributors
    //
    // This file is part of pammap.
    //
    // pammap is free software: you can redistribute it and/or modify
    // it under the terms of the GNU Lesser General Public License as published
    // by the Free Software Foundation, either version 3 of the License, or
    // (at your option) any later version.
    //
    // pammap is distributed in the hope that it will be useful,
    // but WITHOUT ANY WARRANTY; without even the implied warranty of
    // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    // GNU Lesser General Public License for more details.
    //
    // You should have received a copy of the GNU Lesser General Public License
    // along with pammap. If not, see <http://www.gnu.org/licenses/>.
    //

    //
    // Do not edit. This file has been automatically generated by the script
    // {1:}
    // Instead edit the script and rerun it.
    //
    """.format(date.today().year, os.path.basename(script))
    return clean_block(ret)


NAMESPACE_OPEN = [
    "",
    "namespace pammap {",
    "",
]


NAMESPACE_CLOSE = [
    "",
    "}  // namespace pammap",
    "",
]


def to_cpp_type(dtype, full=False):
    """Convert the dtype to the C++ name used for it"""
    if full:
        return "pammap::" + dtype[0].upper() + dtype[1:]
    else:
        return dtype[0].upper() + dtype[1:]


def to_cpp_arraytype(dtype, full=False):
    if full:
        return "pammap::ArrayView<" + to_cpp_type(dtype, full=True) + ">"
    else:
        return "ArrayView<" + to_cpp_type(dtype, full=False) + ">"


def make_supported_cpp_types(dtypes):
    """Convert the dtypes to cpp_types using to_cpp_type
       and also build derived types like ArrayView<ccptype>
       and return the full lot as a list.
    """
    supported_types = [to_cpp_type(dtype) for dtype in constants.cpp.underlying_type]
    supported_types += [
        "ArrayView<" + cpptype + ">" for cpptype in supported_types
    ]
    return supported_types


def clang_format(data):
    """
    Send a string through clang-format
    """
    return subprocess.check_output(["clang-format", "-style=file"],
                                   input=data, universal_newlines=True)
